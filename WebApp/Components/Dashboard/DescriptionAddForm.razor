@using WebApp.Components.FormComponents
@using WebApp.Models

@inject WebApp.Services.Repositories.JobDescriptionRespository JobDescriptionRespository


<ConfigurationForm Title="Add Job Descriptions">
    <div class="flex flex-col gap-2 rounded-md">
        <FormTextInput Label="Name" Placeholder="Job Description" OnValueChanged="OnNameChange" Value="@PartialJobDescription.Name"/>
        <FormTextInput Label="Key Words" Placeholder="Key Words (separated by ,)" OnValueChanged="OnKeyWordsChanged" Value="@KeyWords"/>

        <div class="flex flex-row gap-5 mt-5">
            <ConfigurationSelect Item="JobDescription" ClassName="flex-grow" />
            <button class="rounded-md bg-[#F4F4F4] border border-1 px-5 py-2" @onclick="AddJobDescription">
                Create
            </button>
        </div>

    </div>

</ConfigurationForm>

@code {
    protected JobDescription PartialJobDescription = new();

    [Parameter]
    public EventCallback OnDescriptionAdded { get; set; }

    protected string KeyWords { get; set; } = "";

    public async Task AddJobDescription()
    {

        if (string.IsNullOrEmpty(PartialJobDescription.Name)) return;

        await JobDescriptionRespository.CreateAsync(PartialJobDescription);
        PartialJobDescription = new();

        await OnDescriptionAdded.InvokeAsync();

        KeyWords = "";
    }

    public void OnNameChange(string name)
    {
        PartialJobDescription.Name = name;
    }

    public void OnKeyWordsChanged(string keywords)
    {
        KeyWords = keywords;
        PartialJobDescription.GlobalKeyWords = KeyWords.Split(",").Select(kw => kw.Trim()).ToList();
    }

}
